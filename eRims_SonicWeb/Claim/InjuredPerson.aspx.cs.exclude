using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Collections.Generic;
using System.IO;

public partial class Claim_InjuredPerson : System.Web.UI.Page
{
    #region Private Variables
    public RIMS_Base.Biz.CLiabilityClaimOtherPersonInfo m_objPersonInfo;
    public RIMS_Base.Biz.CGeneral objGeneral;
    int m_intRetval = -1;
    List<RIMS_Base.CLiabilityClaimOtherPersonInfo> lstinjuredPer;

    public string m_strCustomFileName = string.Empty;
    public string m_strFileName = string.Empty;
    public string m_strGlobalPath = string.Empty;
    public string m_strPath = string.Empty;
    public string m_strFolderName = "InjuredPerson";
    public RIMS_Base.Biz.CAttachment m_objAttachment;
    List<RIMS_Base.CAttachment> lstAttachment = null;
    int Attach_Retval = -1;
    RIMS_Base.Biz.CLiabilityClaim_FCI objLiability;
    List<RIMS_Base.CLiabilityClaim_FCI> lstLiability;
    #endregion
    protected void Page_Load(object sender, EventArgs e)
    {
        txtzipcode.Attributes.Add("onKeyUp", "return ZipMasking(event,this.value,this);");
        txtzipcode.Attributes.Add("onKeyPress", "return CheckNum(this);");

       // txtzipcode.Attributes.Add("onKeyPress", "isValid(this)");
        m_strGlobalPath = Page.ResolveUrl(ConfigurationManager.AppSettings["UploadPath"] + "/" + m_strFolderName + "/");
        if (!IsPostBack)
        {
           
            BindCombo();

            gvAttachmentDetails.DataSource = BindAttachmentDetails();
            gvAttachmentDetails.DataBind();


            btnRemove.Attributes.Add("onclick", "return OMSCheckSelected1('chkItem','gvAttachmentDetails','Delete');");
           

            if (Request.QueryString.Count > 0)
            {
                if (Request.QueryString["LiabilityID"] != string.Empty)
                {
                    Session["WitnessId"] = Request.QueryString["LiabilityID"].ToString();
                    ViewState["Pk_Id"] = Request.QueryString["LiabilityID"].ToString();
                    RetriveData();
                }
            }


           

        }
    }
    protected void btnCancel_Click(object sender, EventArgs e)
    {
        Response.Redirect("../Claim/AutoLiability.aspx?Page=Injured");
    }

    #region Private Methods
    private void BindCombo()
    {
        objGeneral = new RIMS_Base.Biz.CGeneral();
        dwState.DataSource = objGeneral.GetAllState();
        dwState.DataTextField = "FLD_state";
        dwState.DataValueField = "Code";
        dwState.DataBind();
        ListItem lstItem = new ListItem("------------Select------------", "0");
        dwState.Items.Insert(0, lstItem);

        dwTheInjuredWas.DataSource = objGeneral.GetInjuredTypes();
        dwTheInjuredWas.DataTextField = "InjuredType_Fld_Desc";
        dwTheInjuredWas.DataValueField = "PK_Injured_Type";
        dwTheInjuredWas.DataBind();
        ListItem lstInjuredItem = new ListItem("------------Select------------", "0");
        dwTheInjuredWas.Items.Insert(0, lstInjuredItem);


    }
    private void RetriveData()
    {
        m_objPersonInfo = new RIMS_Base.Biz.CLiabilityClaimOtherPersonInfo();
        lstinjuredPer = new List<RIMS_Base.CLiabilityClaimOtherPersonInfo>();
        Int32 LiabilityClaimid = Convert.ToInt32(Session["WitnessId"].ToString());
        lstinjuredPer = m_objPersonInfo.Get_Claim_OtherPersonInfoByID(LiabilityClaimid);

        try
            
        {
            if (lstinjuredPer.Count != 0)
            {
                if (lstinjuredPer[0].Injured_Person_name != String.Empty)
                    txtName.Text = lstinjuredPer[0].Injured_Person_name;

                if (lstinjuredPer[0].Injured_Person_Address1 != String.Empty)
                    txtAddLine1.Text = lstinjuredPer[0].Injured_Person_Address1;

                if (lstinjuredPer[0].Injured_Person_Address2 != String.Empty)
                    txtAddLine2.Text = lstinjuredPer[0].Injured_Person_Address2;

                if (lstinjuredPer[0].Injured_Person_City != String.Empty)
                    txtcity.Text = lstinjuredPer[0].Injured_Person_City;


                if (lstinjuredPer[0].Injured_Person_Zipcode != String.Empty)
                    txtzipcode.Text = lstinjuredPer[0].Injured_Person_Zipcode;

                if (lstinjuredPer[0].Injured_Person_Telephone != String.Empty)
                    txthomephone.Text = lstinjuredPer[0].Injured_Person_Telephone;

                if (lstinjuredPer[0].Desc_Injuries != String.Empty)
                    txtDescInjuries.Text = lstinjuredPer[0].Desc_Injuries;

                if (lstinjuredPer[0].FK_Person_State != null)
                    dwState.SelectedIndex = dwState.Items.IndexOf(dwState.Items.FindByValue(lstinjuredPer[0].FK_Person_State.ToString()));

                if (lstinjuredPer[0].FK_InjuredType_Was != null)
                    dwTheInjuredWas.SelectedIndex = dwTheInjuredWas.Items.IndexOf(dwTheInjuredWas.Items.FindByValue(lstinjuredPer[0].FK_InjuredType_Was.ToString()));



                lstAttachment = BindAttachmentDetails();
                if (lstAttachment.Count > 0)
                {
                    gvAttachmentDetails.DataSource = lstAttachment;
                    gvAttachmentDetails.DataBind();
                  
                    btnRemove.Visible = true;
                    btnMail.Visible = true;
                    dvAttachDetails.Style["display"] = "block";
                }


            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    private void InsertUpdateData()
    {
        try
        {

            m_objPersonInfo = new RIMS_Base.Biz.CLiabilityClaimOtherPersonInfo();

            if (ViewState["Pk_Id"] != null && ViewState["Pk_Id"].ToString() != String.Empty)
            {
                m_objPersonInfo.PK_Injured_Person = Convert.ToInt32(ViewState["Pk_Id"].ToString());
                m_objPersonInfo.Updated_Date = DateTime.Now;
            }
            m_objPersonInfo.FK_Liability_Claim = Convert.ToInt32(Session["WorkerCompID"]);
            m_objPersonInfo.Injured_Person_name = txtName.Text.Trim();
            m_objPersonInfo.Injured_Person_Address1 = txtAddLine1.Text.Trim();
            m_objPersonInfo.Injured_Person_Address2 = txtAddLine2.Text.Trim();
            m_objPersonInfo.Injured_Person_City = txtcity.Text.Trim();
            if (dwState.SelectedIndex != 0)
                m_objPersonInfo.FK_Person_State = Convert.ToDecimal(dwState.SelectedValue);
            m_objPersonInfo.Injured_Person_Zipcode = txtzipcode.Text.Trim();
            m_objPersonInfo.Injured_Person_Telephone = txthomephone.Text.Trim();
            if (dwTheInjuredWas.SelectedIndex != 0)
                m_objPersonInfo.FK_InjuredType_Was = Convert.ToDecimal(dwTheInjuredWas.SelectedValue);
            m_objPersonInfo.Desc_Injuries = txtDescInjuries.Text.Trim();

            m_intRetval = m_objPersonInfo.InsertUpdateility_Claim_OtherPersonInfo(m_objPersonInfo);
            ViewState["Pk_Id"] = m_intRetval;

        }
        catch (Exception ex)
        {
            throw ex;
        }

    }
    #endregion

    #region Attachment

    protected void gvAttachmentDetails_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        try
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                ((ImageButton)e.Row.FindControl("imgbtnDwnld")).Attributes.Add("onclick", "javascript:return openWindow('" + m_strGlobalPath + ((ImageButton)e.Row.FindControl("imgbtnDwnld")).CommandArgument.ToString() + "');");
                //((ImageButton)e.Row.FindControl("imgbtnMail")).Attributes.Add("onclick", "javascript:return openMailWindow('../ErimsMail.aspx?AttMod=Worker_Comp_Subrogation_Detail&AttName=" + ((ImageButton)e.Row.FindControl("imgbtnMail")).CommandArgument.ToString() + "');");
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    private void UploadDocuments()
    {
        try
        {
            m_strPath = Server.MapPath(ConfigurationManager.AppSettings["UploadPath"]);

            if (!(Directory.Exists(m_strPath + "\\" + m_strFolderName)))
            {
                Directory.CreateDirectory(m_strPath + "\\" + m_strFolderName);
            }
            m_strFileName = GetCustomFileName() + uplCommon.FileName.ToString();
            m_strPath = m_strPath + "\\" + m_strFolderName + "\\" + m_strFileName;
            uplCommon.SaveAs(m_strPath);

        }
        catch (Exception ex)
        {
            //Log.Append("Error in UploadPhotoImages Method of ConditionAssessment's PhotoGraphs:" + ex.Message);
            //Common.reportError("Error in UploadPhotoImages Method of ConditionAssessment's PhotoGraphs:", ex.Message);
            throw ex;
        }
    }

    private string GetCustomFileName()
    {
        try
        {
            m_strCustomFileName = System.DateTime.Now.ToString("MMddyyhhmmss");
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return m_strCustomFileName;
    }

    private int AddAttachment()
    {
        try
        {
            //InsertUpdateData();
            UploadDocuments();
            m_objAttachment = new RIMS_Base.Biz.CAttachment();
            m_objAttachment.Attachment_Table = "Liability_Claim_OtherPersonInfo";
            m_objAttachment.Foreign_Key = Convert.ToInt32(ViewState["Pk_Id"].ToString());
            m_objAttachment.FK_Attachment_Type = 1;
            //Convert.ToInt32(ddlAttachType.SelectedValue);
            m_objAttachment.Attachment_Description = txtAttachDesc.Text.Replace("'", "''");
            m_objAttachment.Attachment_Name = m_strFileName;
            m_objAttachment.Updated_By = Session["UserID"].ToString();
            m_objAttachment.Update_Date = System.DateTime.Now.Date;
            Attach_Retval = m_objAttachment.InsertUpdateAttachment(m_objAttachment);


        }
        catch (Exception ex)
        {
            throw ex;
        }
        return Attach_Retval;
    }
    protected void btnAddAttachment_Click(object sender, EventArgs e)
    {
        InsertUpdateData();
        //dvAttachDetails.Style["display"] = "block";
        //divAttachmen.Style["display"] = "block";
        //divClaimDetail.Style["display"] = "none";
        //divInsurance.Style["display"] = "none";

        //hdnTagName.Value = "third";
        dvAttachDetails.Style["display"] = "block";
        AddAttachment();

        ddlAttachType.SelectedIndex = 1;
        txtAttachDesc.Text = "";

        if (Attach_Retval > 0)
        {
            gvAttachmentDetails.DataSource = BindAttachmentDetails();
            gvAttachmentDetails.DataBind();

        }
        btnRemove.Visible = true;
        //dispTagName.Value = "divthird";
    }
    private List<RIMS_Base.CAttachment> BindAttachmentDetails()
    {
        try
        {
            m_objAttachment = new RIMS_Base.Biz.CAttachment();
            lstAttachment = new List<RIMS_Base.CAttachment>();
            if (ViewState["Pk_Id"] != null && ViewState["Pk_Id"].ToString() != string.Empty)
                lstAttachment = m_objAttachment.GetAll(0, Convert.ToInt32(ViewState["Pk_Id"].ToString()), "Liability_Claim_OtherPersonInfo");
            else
                lstAttachment = m_objAttachment.GetAll(0, 0, "Liability_Claim_OtherPersonInfo");

            if (lstAttachment.Count > 0)
            {
                btnRemove.Visible = true;
                btnMail.Visible = true;
                //btnViewMail.Visible = true;
            }
            else
            {
                btnRemove.Visible = false;
                btnMail.Visible = false;
                //btnViewMail.Visible = false;
            }
            return lstAttachment;
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {

        }
    }
    protected void btnRemove_Click(object sender, EventArgs e)
    {
        try
        {
            m_objAttachment = new RIMS_Base.Biz.CAttachment();
            Attach_Retval = m_objAttachment.DeleteAttachment(Request.Form["chkItem"].ToString());
            if (Attach_Retval <= 0)
            {

                gvAttachmentDetails.DataSource = BindAttachmentDetails();
                gvAttachmentDetails.DataBind();
                if (lstAttachment.Count > 0)
                    btnRemove.Visible = true;
                else
                    btnRemove.Visible = false;
            }
            dvAttachDetails.Visible = true;

            //dvAttachDetails.Style["display"] = "block";
            //divAttach.Style["display"] = "block";
            //divClaimDetail.Style["display"] = "none";
            //divInsurance.Style["display"] = "none";

            //hdnTagName.Value = "third";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    #endregion
    protected void btnsave_Click(object sender, EventArgs e)
    {
        InsertUpdateData();
        Response.Redirect("../Claim/AutoLiability.aspx?Page=Injured");
    }
}
